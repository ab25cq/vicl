
class ViClone
{
    var endOfAplication:bool;
    var keyEvents: lambda[](ViClone, int, int);
    var mode: int;

    enum { EDITMODE, INSERTMODE, COMMANDMODE, COMPLETIONMODE }

    def initialize() {
        endOfAplication = false;

        mode = EDITMODE;

        keyEvents = new lambda[KEY_MAX](ViClone, int, int)();

        defaultKeyEvents();

        initscr();
        keypad(stdscr, true);
        noecho();
    }

    def input(): int {
        return getch();
    }

    def finalize() {
        endwin();
    }

    def runKeyEvents(key:int) {
        when(mode) {
            case (EDITMODE) {
                if(keyEvents[key].identifyWith(null).negative()) {
                    var key2 := 0;
                    when(key) {
                        case ('d'.to_int, 'c'.to_int, 'Z'.to_int, 'g'.to_int) {
                            key2 = getch();
                        }
                    }
                    keyEvents[key](self, key, key2);
                }
            }

            case (INSERTMODE) {
                modifiedText = true;
                insertMode(key);
            }

            case (COMMANDMODE) {
                commandMode(key);
            }

            case (COMPLETIONMODE) {
                completionMode(key);
            }
        }
    }
}
