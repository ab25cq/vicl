include "ViClone6Edit.clcl"

class ViClone
{
    var undoTexts:SortableList<String>;
    var undoIndex:int;
    var undoCurosrPosition:EqualableList<Tuple4<Integer, Integer, Integer, Integer>>;

    def initialize() {
        inherit();

        undoTexts = SortableList<String>();
        undoIndex = 0;

        undoCurosrPosition = EqualableList<Tuple4<Integer, Integer, Integer, Integer>>();
    }

    def addUndoText() {
        undoTexts.deleteWithRange(undoIndex, -1);
        undoTexts.add(texts.join("\n"));
        undoCurosrPosition.deleteWithRange(undoIndex, -1);
        undoCurosrPosition.add((scrollTopY, scrollTopX, cursorY, cursorX));
        undoIndex++;
    }

    def defaultKeyEvents() {
        inherit();

        keyEvents['u'.to_int] = lambda(self:ViClone, key:int, key2:int) {
            if(undoIndex == undoTexts.length()) {
                addUndoText();
                undoIndex--;
            }
            if(undoIndex > 0) {
                undoIndex--;
                texts = undoTexts.items(undoIndex).split(/\n/);
                
                (scrolltop_y, scrolltop_x, cursor_y, cursor_x) := undoCurosrPosition.items(undoIndex);

                scrollTopY = scrolltop_y;
                scrollTopX = scrolltop_x;
                cursorY = cursor_y;
                cursorX = cursor_x;
            }

            makeVisibleTexts();
        }
        keyEvents[('R'-'A').to_int+1] = lambda(self:ViClone, key:int, key2:int) {
            if(undoIndex < undoTexts.length()-1) {
                undoIndex++;
                texts = undoTexts.items(undoIndex).split(/\n/);
                
                (scrolltop_y, scrolltop_x, cursor_y, cursor_x) := undoCurosrPosition.items(undoIndex);

                scrollTopY = scrolltop_y;
                scrollTopX = scrolltop_x;
                cursorY = cursor_y;
                cursorX = cursor_x;
            }

            makeVisibleTexts();
        }
    }
}